# Generated by Django 4.0.4 on 2022-05-17 10:55

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


def populate_thumbnails_and_account_tiers(apps, schema_editor):
    """
    Populate Thumbnail Sizes and Account Tiers
    """
    ImageThumbnailSize = apps.get_model('imagehostingapp', 'ImageThumbnailSize')

    thumbnails = [
        ImageThumbnailSize(thumbnail_size_px=200),
        ImageThumbnailSize(thumbnail_size_px=400),
    ]

    bulk_create_db_response = ImageThumbnailSize.objects.bulk_create(thumbnails)
    thumbnail_200px, thumbnail_400px = bulk_create_db_response

    AccountTiers = apps.get_model('imagehostingapp', 'AccountTiers')

    account_tiers = [
        AccountTiers(
            account_tier_name="Basic", is_original_image_url_present=False, is_expiring_links_available=False
        ),
        AccountTiers(
            account_tier_name="Premium", is_original_image_url_present=True, is_expiring_links_available=False
        ),
        AccountTiers(
            account_tier_name="Enterprise", is_original_image_url_present=True, is_expiring_links_available=True
        ),
    ]
    bulk_create_db_response = AccountTiers.objects.bulk_create(account_tiers)
    basic_tier, premium_tier, enterprise_tier = bulk_create_db_response

    basic_tier.thumbnail_sizes.add(*[thumbnail_200px])
    premium_tier.thumbnail_sizes.add(*[thumbnail_200px, thumbnail_400px])
    enterprise_tier.thumbnail_sizes.add(*[thumbnail_200px, thumbnail_400px])


def wipe_thumbnails_and_account_tiers(apps, schema_editor):
    """
    Truncate Thumbnail Sizes and Account Tiers
    """
    AccountTiers = apps.get_model('imagehostingapp', 'AccountTiers')
    AccountTiers.objects.all().delete()

    ImageThumbnailSize = apps.get_model('imagehostingapp', 'ImageThumbnailSize')
    ImageThumbnailSize.objects.all().delete()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountTiers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_tier_name', models.CharField(default='', max_length=255, verbose_name='Account Tier Name')),
                ('is_original_image_url_present', models.BooleanField(verbose_name='Originally uploaded image URL')),
                ('is_expiring_links_available', models.BooleanField(verbose_name='Generate expiring links (300 - 30000 sec)')),
            ],
            options={
                'verbose_name': 'Account Tier',
            },
        ),
        migrations.CreateModel(
            name='ImageThumbnailSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumbnail_size_px', models.IntegerField(verbose_name='Image Thumbnail Size')),
            ],
            options={
                'verbose_name': 'Thumbnail Size',
            },
        ),
        migrations.CreateModel(
            name='UploadedImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('image_name', models.CharField(default='', max_length=255, verbose_name='Image Name')),
                ('image_desc', models.CharField(default='', max_length=255, verbose_name='Image Description')),
                ('image_path', models.ImageField(upload_to='user_images', verbose_name='Image to be Uploaded')),
                ('image_uri', models.URLField(default='', max_length=255, verbose_name='Image URI')),
                ('image_uri_expiry_sec', models.IntegerField(default=-1, verbose_name='Image link expire after seconds')),
                ('image_created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('image_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Uploaded Image',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imagehostingapp.accounttiers')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Subscription',
            },
        ),
        migrations.AddField(
            model_name='accounttiers',
            name='thumbnail_sizes',
            field=models.ManyToManyField(to='imagehostingapp.imagethumbnailsize', verbose_name='Thumbnail Sizes'),
        ),
        migrations.RunPython(
            populate_thumbnails_and_account_tiers
        ),
    ]

    def unapply(self, project_state, schema_editor, collect_sql=False):
        wipe_thumbnails_and_account_tiers()
